#!/usr/bin/env tclsh8.6
# -*- mode: tcl; indent-tabs-mode: nil; tab-width: 4; -*-

package require appc::env
package require appc::native
package require appc::build
package require appc::publish
package require appc::pull
package require appc::run
package require appc::zfs

package require debug

debug define appc
debug on appc 1 stderr
set options [appc::parse_options $argv]
debug.appc "Options: $options"
set command [dict get $options command]

#TODO: This belongs someplace common with appcd.  Perhaps
# an appc_init.tcl module
set pool [appc::env::get_pool]
if {![appc::zfs::is_mounted $pool]} {
    puts stderr "ZFS pool '$pool' is not mounted.  Attempting to mount now"
    appc::zfs::mount $pool
}

set pre_command_flags [dict get $options pre_command_flags]
set run_local [dict get $pre_command_flags local]

if {$run_local} {
    set pty stdout
    switch -exact $command {

        build {
            appc::build::build_command [dict get $options args]
        }
        run {
            appc::run::run_command $pty [dict get $options args]
        }
        publish {
            appc::publish::publish_command [dict get $options args]
        }
        pull {
            appc::pull::pull_command [dict get $options args]
        }
        default {
            puts stderr "Unknown command: $command"
        }
    }
} else {
    package require appcd::client

    appcd::client::main $options
}


